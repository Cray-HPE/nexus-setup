# Copyright 2020 Hewlett Packard Enterprise Development LP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus-setup.fullname" . }}
  labels:
    # Supports future NetworkPolicy ingress rules
    nexus: setup
{{ include "cray-nexus-setup.labels" . | indent 4 }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "cray-nexus-setup.fullname" . }}
      labels:
{{ include "cray-nexus-setup.labels" . | indent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: setup
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
          {{- if .Values.adminCredentials.enabled }}
          - name: NEXUS_SERVICE
            value: {{ .Values.nexusService }}
          - name: NEXUS_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.adminCredentials.secret }}"
                key: username
          - name: NEXUS_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.adminCredentials.secret }}"
                key: password
          {{- end }}
          {{- if .Values.s3.enabled }}
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.s3.secret }}"
                key: access_key
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.s3.secret }}"
                key: secret_key
          - name: S3_ENDPOINT
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.s3.secret }}"
                key: endpoint_url
          {{- end }}
          command:
          - /bin/bash
          - -c
          - |-
            set -x

            export NEXUS_URL="http://${NEXUS_ADMIN_USERNAME:-admin}:${NEXUS_ADMIN_PASSWORD:-admin123}@${NEXUS_SERVICE:-nexus}"

            while ! nexus-ready; do
                echo >&2 "trying again in 10 seconds"
                sleep 10
            done

            set -e

            nexus-enable-docker-realm >&2
            nexus-blobstores-create /data/blobstores.yaml >&2
            nexus-repositories-create /data/repositories.yaml >&2

          volumeMounts:
          - mountPath: /data
            name: nexus-setup
      volumes:
      - name: nexus-setup
        configMap:
          name: {{ template "cray-nexus-setup.fullname" . }}
