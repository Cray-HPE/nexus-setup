{{- /* Copyright 2020 Hewlett Packard Enterprise Development LP */ -}}

{{- /* Nexus S3 credentials are generated by the nexus-s3-setup role and put in
the default namespace. This job is a pre-install hook to create a corresponding
secret in the nexus namespace in order for the credentials to be available
during Nexus setup when S3 blob stores are created. */ -}}

{{- if .Values.s3.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cray-nexus-setup.fullname" . }}-s3-setup
  namespace: loftsman
  labels: {{ include "cray-nexus-setup.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: {{ template "cray-nexus-setup.fullname" . }}-s3-setup
      labels: {{ include "cray-nexus-setup.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: loftsman
      containers:
        - name: s3-setup
          image: "{{ .Values.kubectl.image.repository }}:{{ .Values.kubectl.image.tag }}"
          imagePullPolicy: "{{ .Values.kubectl.image.pullPolicy }}"
          env:
          - name: SRC_NAMESPACE
            value: {{ .Values.s3.srcSecret.namespace | quote }}
          - name: SRC_SECRET
            value: {{ .Values.s3.srcSecret.name | quote }}
          - name: DEST_NAMESPACE
            value: {{ .Release.Namespace | quote }}
          - name: DEST_SECRET
            value: {{ .Values.s3.secret | quote }}
          - name: S3_ENDPOINT_URL
            value: {{ .Values.s3.endpointUrl | quote }}
          command:
          - /bin/sh
          - -c
          - |-
            set -e
            echo -n "$S3_ENDPOINT_URL" > endpoint_url
            kubectl -n "$SRC_NAMESPACE" get secret "$SRC_SECRET" -o jsonpath='{.data.access_key}' | base64 -d > access_key
            kubectl -n "$SRC_NAMESPACE" get secret "$SRC_SECRET" -o jsonpath='{.data.secret_key}' | base64 -d > secret_key
            kubectl -n "$DEST_NAMESPACE" delete --force --ignore-not-found secret "$DEST_SECRET"
            kubectl -n "$DEST_NAMESPACE" create secret generic "$DEST_SECRET" --from-file=./access_key --from-file=./secret_key --from-file=./endpoint_url
{{- end }}
