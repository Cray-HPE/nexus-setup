@Library('csm-shared-library') _

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        NAME = "nexus-setup"
        DESCRIPTION = "Utilities to setup and configure Nexus."
        IS_STABLE = getBuildIsStable()
        VERSION = getDockerBuildVersion(isStable: env.IS_STABLE)
        DOCKER_ARGS = getDockerBuildArgs(name: env.NAME, description: env.DESCRIPTION)
        BUILD_METADATA = getRpmRevision(isStable: env.IS_STABLE)
        CHART_NAME_1 = "cray-nexus-setup"
        CHART_NAME_2 = "cray-nexus-sync"
        CHART_VERSION_1 = getChartVersion(name: env.CHART_NAME_1, isStable: env.IS_STABLE)
        CHART_VERSION_2 = getChartVersion(name: env.CHART_NAME_2, isStable: env.IS_STABLE)
    }

    stages {
        stage("Image") {
            steps {
                sh "make image"
            }
        }

        stage("RPM") {
            steps {
                sh "make rpm"
            }
        }

        stage("Charts") {
            steps {
                sh "make charts"
            }
        }

        stage("Publish") {
            steps {
                script {
                    publishCsmDockerImage(image: env.NAME, tag: env.VERSION, isStable: env.IS_STABLE)
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", arch: "x86_64", isStable: env.IS_STABLE)
                    publishCsmRpms(component: env.NAME, pattern: "dist/rpmbuild/RPMS/*.rpm", arch: "src", isStable: env.IS_STABLE)
                    publishCsmHelmCharts(component: env.NAME, chartsPath: "${WORKSPACE}/charts/.packaged", isStable: env.IS_STABLE)
                }
            }
        }
    }
}