#!/usr/bin/env bash

# Copyright 2022-2025 Hewlett Packard Enterprise Development LP

if [[ $# -ne 2 ]]; then
    echo >&2 "Usage: ${0##*/} SRC-DIRECTORY DEST-REPOSITORY"
    exit 1
fi

path="$1"
repo="$2"
shift 2

if [[ ! -d "$path" ]]; then
    echo >&2 "ERROR No such directory: $path"
    exit 1
fi

command -v parallel >/dev/null 2>&1 || { echo >&2 "ERROR Command not found: parallel"; exit 1; }

. "$(command -v nexus-ready)"

upload-asset-helm() {
    file="$1"
    asset="${file##$path}"
    asset="${asset#/}"

    status=""
    max_retry=3
    retry_count=0
    while [[ "$status" != "204" && "$status" != "400" ]] && [ $retry_count -lt $max_retry ]; do
        status="$(curl -sfk \
            --retry-connrefused \
            --retry "${CURL_RETRY:-36}" \
            --retry-delay "${CURL_RETRY_DELAY:-5}" \
            --max-time "${CURL_MAX_TIME:-180}" \
            -w "%{http_code} %{size_upload} %{time_total} %{speed_upload}\n" \
            -X POST "${URL}/v1/components?repository=${repo}" \
            -F "helm.asset=@${file}")"
        echo "DEBUG <curl to URL  ${URL}/v1/components?repository=${repo}> completed with: $status"
        status="${status%% *}"
        retry_count=$((RETRY_COUNT + 1))
    done

    if [[ "$status" = "204" ]]; then
        echo "INFO Created repository ${repo}";
    elif [[ "$status" = "400" ]]; then
        echo "INFO Repository ${repo} already exists";
    else
        echo "ERROR Unable to Create Repository ${repo}, max attempts completed"
        exit 1
    fi
}

export URL path repo
export -f upload-asset-helm

find "$path" -name '*.tgz' -type f \
    | time parallel --line-buffer --tag \
        "-j${PARALLEL_JOBS:-32}" \
        "${PARALLEL_FLAGS}" \
        upload-asset-helm
