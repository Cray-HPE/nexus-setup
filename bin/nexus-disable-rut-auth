#!/usr/bin/env bash
#
# MIT License
#
# (C) Copyright 2022, 2024 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
. "$(command -v nexus-ready)"

# requires the setup_capability script

echo -n >&2 "Disable Rut Auth capability..."

curl -sfk -w "%{http_code}" -X POST \
    "${URL}/v1/script/setup_capability/run" \
    -H "Content-Type: application/json" \
    -d '{"capability_typeId": "rutauth", "capability_enabled": false, "capability_properties": {"httpHeader": "X-WEBAUTH-USER"}}'
status=$?

if [[ $status -eq 0 ]]; then echo >&2 " OK"; else echo >&2 " FAIL"; exit $status; fi

# Disabling the capability does not remove the corresponding security realm

echo -n >&2 "Disable Rut Auth security realm..."

curl -sfk "${URL}/v1/security/realms/active" \
    | jq 'del(.[] | select(. == "rutauth-realm"))' \
    | curl -sfk -w "%{http_code}" -X PUT \
        "${URL}/v1/security/realms/active" \
        -H 'Content-Type: application/json' \
        -d @-
status=$?

if [[ $status -eq 0 ]]; then echo >&2 " OK"; else echo >&2 " FAIL"; exit $status; fi
