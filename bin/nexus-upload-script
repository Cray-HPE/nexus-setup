#!/usr/bin/env bash
#
# MIT License
#
# (C) Copyright 2022, 2024 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
. "$(command -v nexus-ready)"

function upload_script() {
    curl -sfk -w "%{http_code}" -X "${1:-"POST"}" \
        "${URL}/v1/script" \
        -H 'Content-Type: application/json' \
        -d @- << EOF
{
"name": $(echo -n "$name" | jq -Rs .),
"type": "groovy",
"content": $(jq -Rs . "$path")
}
EOF
}

while [[ $# -gt 0 ]]; do
    path="$1"
    shift

    if [[ ! -f "$path" ]]; then
        echo >&2 "error: no such file: $path"
        exit 1
    fi

    name="${path##*/}"
    name="${name%.groovy}"

    echo -n >&2 "Upload script: ${name} ..."

    if curl -sfk -w "%{http_code}" -X GET "${URL}/v1/script/${name}" >/dev/null; then
        # Script already exists
        echo -n >&2 " (exists) "
        curl -sfk -w "%{http_code}" -X PUT \
            "${URL}/v1/script/${name}" \
            -H 'Content-Type: application/json' \
            -d @- << EOF
{
"name": $(echo -n "$name" | jq -Rs .),
"type": "groovy",
"content": $(jq -Rs . "$path")
}
EOF
    else
        curl -sfk -w "%{http_code}" -X POST \
            "${URL}/v1/script" \
            -H 'Content-Type: application/json' \
            -d @- << EOF
{
"name": $(echo -n "$name" | jq -Rs .),
"type": "groovy",
"content": $(jq -Rs . "$path")
}
EOF
    fi
    status=$?

    if [[ $status -eq 0 ]]; then echo >&2 " OK"; else echo >&2 " FAIL"; exit $status; fi
done
