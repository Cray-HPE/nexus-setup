#!/usr/bin/env bash

# Copyright 2022 Hewlett Packard Enterprise Development LP

command -v yq >/dev/null 2>&1 || { echo >&2 "command not found: yq"; exit 1; }

. "$(command -v nexus-ready)"

WORKDIR="$(mktemp -d)"
trap "{ rm -rf '$WORKDIR'; }" EXIT

while [[ $# -gt 0 ]]; do
    nrepos=$(yq r -d '*' -X -c -l "$1")

    for (( i=0; i<nrepos; i++ )); do
        tmpfile="${WORKDIR}/repository-${#}-${i}.yaml"
        yq r -d $i -X --stripComments "$1" > "$tmpfile"

        repo_name="$(yq r "$tmpfile" 'name')"
        repo_format="$(yq r "$tmpfile" 'format')"
        repo_type="$(yq r "$tmpfile" 'type')"

        # First try to create
        echo -n >&2 "Creating ${repo_format}/${repo_type} repository: ${repo_name}..."
        yq r -j "$tmpfile" | curl -sfk -w "%{http_code}" \
            --retry-connrefused \
            --retry "${CURL_RETRY:-36}" \
            --retry-delay "${CURL_RETRY_DELAY:-5}" \
            --max-time "${CURL_MAX_TIME:-180}" \
            -X POST "${URL}/beta/repositories/${repo_format}/${repo_type}" \
            -H "Content-Type: application/json" \
            -d @-
        status=$?
        if [[ $status -eq 0 ]]; then
            echo >&2 " OK created"
        else
            echo >&2 " FAIL"

            # Failed to create, try to update
            echo -n >&2 "Updating ${repo_format}/${repo_type} repository: ${repo_name}..."
            yq r -j "$tmpfile" | curl -sfk -w "%{http_code}" \
                --retry-connrefused \
                --retry "${CURL_RETRY:-36}" \
                --retry-delay "${CURL_RETRY_DELAY:-5}" \
                --max-time "${CURL_MAX_TIME:-180}" \
                -X PUT "${URL}/beta/repositories/${repo_format}/${repo_type}/${repo_name}" \
                -H "Content-Type: application/json" \
                -d @-
            status=$?
            if [[ $status -eq 0 ]]; then
                echo >&2 " OK updated"
            else
                echo >&2 " FAIL"; exit $status;
            fi
        fi
    done

    shift
done

